{
	"info": {
		"_postman_id": "vikract-blog-api-collection",
		"name": "Vikract Blog API",
		"description": "Colecci√≥n completa para testear todos los endpoints del API de blog con NestJS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "vikract-team"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('access_token', response.access_token);",
									"    pm.environment.set('userId', response.user.id);",
									"    console.log('User registered and token saved');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"username\": \"testuser\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Registrar un nuevo usuario y obtener JWT token"
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('access_token', response.access_token);",
									"    pm.environment.set('userId', response.user.id);",
									"    console.log('Admin logged in and token saved');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{adminEmail}}\",\n  \"password\": \"{{adminPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login con usuario admin predeterminado"
					},
					"response": []
				},
				{
					"name": "Login Custom User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('access_token', response.access_token);",
									"    pm.environment.set('userId', response.user.id);",
									"    console.log('User logged in and token saved');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login con credenciales personalizadas"
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"profile"
							]
						},
						"description": "Obtener perfil del usuario autenticado"
					},
					"response": []
				}
			]
		},
		{
			"name": "üîë API Keys Management",
			"item": [
				{
					"name": "Create API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('api_key', response.token);",
									"    console.log('API Key created and saved');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Postman Testing Key\",\n  \"expiresAt\": \"2025-12-31T23:59:59.000Z\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api-keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-keys"
							]
						},
						"description": "Crear una nueva API Key"
					},
					"response": []
				},
				{
					"name": "Get My API Keys",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api-keys/my-keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-keys",
								"my-keys"
							]
						},
						"description": "Obtener mis API Keys"
					},
					"response": []
				}
			]
		},
		{
			"name": "Health Check",
			"item": [
				{
					"name": "API Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Verificar que el API est√° funcionando"
					}
				}
			]
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "Get All Roles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						},
						"description": "Obtener todos los roles disponibles"
					}
				},
				{
					"name": "Create Role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"editor\",\n  \"description\": \"Editor role for content management\",\n  \"permissions\": [\"read\", \"write\", \"edit\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						},
						"description": "Crear un nuevo rol"
					}
				},
				{
					"name": "Get Role by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/roles/{{roleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								"{{roleId}}"
							]
						},
						"description": "Obtener un rol espec√≠fico por su ID"
					}
				},
				{
					"name": "Update Role",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Updated editor role description\",\n  \"permissions\": [\"read\", \"write\", \"edit\", \"publish\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/roles/{{roleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								"{{roleId}}"
							]
						},
						"description": "Actualizar un rol existente"
					}
				},
				{
					"name": "Delete Role",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/roles/{{roleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles",
								"{{roleId}}"
							]
						},
						"description": "Eliminar un rol (soft delete)"
					}
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Obtener todos los usuarios"
					}
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"username\": \"johndoe\",\n  \"password\": \"securePassword123\",\n  \"roleIds\": [\"{{roleId}}\"]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Crear un nuevo usuario"
					}
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "Obtener un usuario espec√≠fico por su ID"
					}
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Johnny\",\n  \"lastName\": \"Doe Updated\",\n  \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "Actualizar un usuario existente"
					}
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "Eliminar un usuario (soft delete)"
					}
				}
			]
		},
		{
			"name": "Languages",
			"item": [
				{
					"name": "Get All Languages",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/languages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages"
							]
						},
						"description": "Obtener todos los idiomas"
					}
				},
				{
					"name": "Get Active Languages",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/languages/active",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages",
								"active"
							]
						},
						"description": "Obtener solo los idiomas activos"
					}
				},
				{
					"name": "Get Default Language",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/languages/default",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages",
								"default"
							]
						},
						"description": "Obtener el idioma por defecto"
					}
				},
				{
					"name": "Create Language",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"code\": \"fr\",\n  \"name\": \"Fran√ßais\",\n  \"isDefault\": false,\n  \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/languages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages"
							]
						},
						"description": "Crear un nuevo idioma"
					}
				},
				{
					"name": "Get Language by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/languages/{{languageId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages",
								"{{languageId}}"
							]
						},
						"description": "Obtener un idioma espec√≠fico por su ID"
					}
				},
				{
					"name": "Update Language",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Fran√ßais (France)\",\n  \"isActive\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/languages/{{languageId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages",
								"{{languageId}}"
							]
						},
						"description": "Actualizar un idioma existente"
					}
				},
				{
					"name": "Delete Language",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/languages/{{languageId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages",
								"{{languageId}}"
							]
						},
						"description": "Eliminar un idioma (soft delete)"
					}
				}
			]
		},
		{
			"name": "Blogs",
			"item": [
				{
					"name": "Get All Blogs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/blogs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blogs"
							]
						},
						"description": "Obtener todos los blogs"
					}
				},
				{
					"name": "Get Active Blogs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/blogs/active",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blogs",
								"active"
							]
						},
						"description": "Obtener solo los blogs activos"
					}
				},
				{
					"name": "Create Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"My Technology Blog\",\n  \"description\": \"A blog about the latest technology trends and developments\",\n  \"ownerId\": \"{{userId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/blogs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blogs"
							]
						},
						"description": "Crear un nuevo blog"
					}
				},
				{
					"name": "Get Blog by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/blogs/{{blogId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blogs",
								"{{blogId}}"
							]
						},
						"description": "Obtener un blog espec√≠fico por su ID"
					}
				},
				{
					"name": "Update Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"My Updated Technology Blog\",\n  \"description\": \"An updated description for my technology blog\",\n  \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/blogs/{{blogId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blogs",
								"{{blogId}}"
							]
						},
						"description": "Actualizar un blog existente"
					}
				},
				{
					"name": "Delete Blog",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/blogs/{{blogId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blogs",
								"{{blogId}}"
							]
						},
						"description": "Eliminar un blog (soft delete)"
					}
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Obtener todas las categor√≠as"
					}
				},
				{
					"name": "Create Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Technology\",\n  \"description\": \"Articles about technology and innovation\",\n  \"translations\": [\n    {\n      \"languageCode\": \"es\",\n      \"name\": \"Tecnolog√≠a\",\n      \"description\": \"Art√≠culos sobre tecnolog√≠a e innovaci√≥n\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Crear una nueva categor√≠a con traducciones"
					}
				},
				{
					"name": "Get Category by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categories/{{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories",
								"{{categoryId}}"
							]
						},
						"description": "Obtener una categor√≠a espec√≠fica por su ID"
					}
				},
				{
					"name": "Update Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Advanced Technology\",\n  \"description\": \"Advanced articles about cutting-edge technology\",\n  \"translations\": [\n    {\n      \"languageCode\": \"es\",\n      \"name\": \"Tecnolog√≠a Avanzada\",\n      \"description\": \"Art√≠culos avanzados sobre tecnolog√≠a de vanguardia\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/categories/{{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories",
								"{{categoryId}}"
							]
						},
						"description": "Actualizar una categor√≠a existente"
					}
				},
				{
					"name": "Delete Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categories/{{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories",
								"{{categoryId}}"
							]
						},
						"description": "Eliminar una categor√≠a (soft delete)"
					}
				}
			]
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get All Tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						},
						"description": "Obtener todos los tags"
					}
				},
				{
					"name": "Create Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"JavaScript\",\n  \"description\": \"Articles related to JavaScript programming\",\n  \"translations\": [\n    {\n      \"languageCode\": \"es\",\n      \"name\": \"JavaScript\",\n      \"description\": \"Art√≠culos relacionados con programaci√≥n en JavaScript\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						},
						"description": "Crear un nuevo tag con traducciones"
					}
				},
				{
					"name": "Get Tag by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags/{{tagId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"{{tagId}}"
							]
						},
						"description": "Obtener un tag espec√≠fico por su ID"
					}
				},
				{
					"name": "Update Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"JavaScript ES6+\",\n  \"description\": \"Modern JavaScript programming with ES6 and beyond\",\n  \"translations\": [\n    {\n      \"languageCode\": \"es\",\n      \"name\": \"JavaScript ES6+\",\n      \"description\": \"Programaci√≥n moderna en JavaScript con ES6 y m√°s\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/tags/{{tagId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"{{tagId}}"
							]
						},
						"description": "Actualizar un tag existente"
					}
				},
				{
					"name": "Delete Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags/{{tagId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"{{tagId}}"
							]
						},
						"description": "Eliminar un tag (soft delete)"
					}
				}
			]
		},
		{
			"name": "Articles",
			"item": [
				{
					"name": "Get All Articles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/articles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles"
							]
						},
						"description": "Obtener todos los art√≠culos"
					}
				},
				{
					"name": "Get Published Articles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/articles/published",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles",
								"published"
							]
						},
						"description": "Obtener solo los art√≠culos publicados"
					}
				},
				{
					"name": "Create Article",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Introduction to NestJS\",\n  \"excerpt\": \"Learn the basics of NestJS framework for building scalable Node.js applications\",\n  \"content\": \"NestJS is a progressive Node.js framework for building efficient and scalable server-side applications. It uses TypeScript by default and combines elements of OOP, FP, and FRP.\",\n  \"authorId\": \"{{userId}}\",\n  \"blogId\": \"{{blogId}}\",\n  \"categoryIds\": [\"{{categoryId}}\"],\n  \"tagIds\": [\"{{tagId}}\"],\n  \"translations\": [\n    {\n      \"languageCode\": \"es\",\n      \"title\": \"Introducci√≥n a NestJS\",\n      \"excerpt\": \"Aprende los fundamentos del framework NestJS para construir aplicaciones Node.js escalables\",\n      \"content\": \"NestJS es un framework progresivo de Node.js para construir aplicaciones del lado del servidor eficientes y escalables. Usa TypeScript por defecto y combina elementos de POO, PF y PRF.\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/articles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles"
							]
						},
						"description": "Crear un nuevo art√≠culo con traducciones"
					}
				},
				{
					"name": "Get Article by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/articles/{{articleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles",
								"{{articleId}}"
							]
						},
						"description": "Obtener un art√≠culo espec√≠fico por su ID"
					}
				},
				{
					"name": "Update Article",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Advanced NestJS Concepts\",\n  \"excerpt\": \"Deep dive into advanced NestJS concepts and best practices\",\n  \"content\": \"This article covers advanced topics in NestJS including custom decorators, interceptors, guards, and microservices architecture.\",\n  \"status\": \"published\",\n  \"isPublished\": true,\n  \"translations\": [\n    {\n      \"languageCode\": \"es\",\n      \"title\": \"Conceptos Avanzados de NestJS\",\n      \"excerpt\": \"Profundizaci√≥n en conceptos avanzados de NestJS y mejores pr√°cticas\",\n      \"content\": \"Este art√≠culo cubre temas avanzados en NestJS incluyendo decoradores personalizados, interceptores, guardias y arquitectura de microservicios.\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/articles/{{articleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles",
								"{{articleId}}"
							]
						},
						"description": "Actualizar un art√≠culo existente"
					}
				},
				{
					"name": "Publish Article",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"published\",\n  \"isPublished\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/articles/{{articleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles",
								"{{articleId}}"
							]
						},
						"description": "Publicar un art√≠culo (cambiar estado a published)"
					}
				},
				{
					"name": "Unpublish Article",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"draft\",\n  \"isPublished\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/articles/{{articleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles",
								"{{articleId}}"
							]
						},
						"description": "Despublicar un art√≠culo (cambiar estado a draft)"
					}
				},
				{
					"name": "Delete Article",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/articles/{{articleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles",
								"{{articleId}}"
							]
						},
						"description": "Eliminar un art√≠culo (soft delete)"
					}
				}
			]
		},
		{
			"name": "Search & Filtering",
			"item": [
				{
					"name": "Get Articles by Blog",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/articles?blogId={{blogId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles"
							],
							"query": [
								{
									"key": "blogId",
									"value": "{{blogId}}"
								}
							]
						},
						"description": "Obtener art√≠culos de un blog espec√≠fico"
					}
				},
				{
					"name": "Get Articles by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/articles?categoryId={{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles"
							],
							"query": [
								{
									"key": "categoryId",
									"value": "{{categoryId}}"
								}
							]
						},
						"description": "Obtener art√≠culos de una categor√≠a espec√≠fica"
					}
				},
				{
					"name": "Get Articles by Tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/articles?tagId={{tagId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles"
							],
							"query": [
								{
									"key": "tagId",
									"value": "{{tagId}}"
								}
							]
						},
						"description": "Obtener art√≠culos con un tag espec√≠fico"
					}
				},
				{
					"name": "Get Articles by Author",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/articles?authorId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles"
							],
							"query": [
								{
									"key": "authorId",
									"value": "{{userId}}"
								}
							]
						},
						"description": "Obtener art√≠culos de un autor espec√≠fico"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api",
			"type": "string"
		},
		{
			"key": "roleId",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "languageId",
			"value": "",
			"type": "string"
		},
		{
			"key": "blogId",
			"value": "",
			"type": "string"
		},
		{
			"key": "categoryId",
			"value": "",
			"type": "string"
		},
		{
			"key": "tagId",
			"value": "",
			"type": "string"
		},
		{
			"key": "articleId",
			"value": "",
			"type": "string"
		}
	]
}